# Releng properties used by language/eztrieve.groovy

#
# Comma separated list of required build properties for eztrieve.groovy
eztrieve_requiredBuildProperties=eztrieve_srcPDS,eztrieve_cpyPDS,eztrieve_objPDS,eztrieve_loadPDS,\
  eztrieve_compiler,eztrieve_linkEditor,eztrieve_tempOptions,applicationOutputsCollectionName,\
  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED, \
  eztrieve_dependencySearch

#
# eztrieve compiler name
eztrieve_compiler=IGYCRCTL

#
# linker name
eztrieve_linkEditor=IEWBLINK

#
# eztrieve source data sets
eztrieve_srcPDS=${hlq}.eztrieve
eztrieve_cpyPDS=${hlq}.COPY
eztrieve_objPDS=${hlq}.OBJ
eztrieve_dbrmPDS=${hlq}.DBRM
eztrieve_BMS_PDS=${team}.BMS.COPY

#
# eztrieve load data sets
eztrieve_loadPDS=${hlq}.LOAD

#
# eztrieve test case source data sets
eztrieve_testcase_srcPDS=${hlq}.TEST.EZTRIEVE

#
# eztrieve test case load data sets
eztrieve_testcase_loadPDS=${hlq}.TEST.LOAD

#
# List the data sets that need to be created and their creation options
eztrieve_srcDatasets=${eztrieve_srcPDS},${eztrieve_cpyPDS},${eztrieve_objPDS},${eztrieve_dbrmPDS}
eztrieve_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

eztrieve_loadDatasets=${eztrieve_loadPDS}
eztrieve_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

eztrieve_tempOptions=cyl space(5,5) unit(vio) blksize(80) lrecl(80) recfm(f,b) new
eztrieve_printTempOptions=cyl space(5,5) unit(vio) blksize(133) lrecl(133) recfm(f,b) new


#
# List the data sets for tests that need to be created and their creation options
eztrieve_test_srcDatasets=${eztrieve_testcase_srcPDS}
eztrieve_test_srcOptions=cyl space(1,1) lrecl(80) dsorg(PO) recfm(F,B) dsntype(library)

eztrieve_test_loadDatasets=${eztrieve_testcase_loadPDS}
eztrieve_test_loadOptions=cyl space(1,1) dsorg(PO) recfm(U) blksize(32760) dsntype(library)

# Allocation of SYSMLSD Dataset used for extracting Compile Messages to Remote Error List
eztrieve_compileErrorFeedbackXmlOptions=tracks space(200,40) dsorg(PS) blksize(27998) lrecl(16383) recfm(v,b) new keep

#
# List of output datasets to document deletions
eztrieve_outputDatasets=${eztrieve_loadPDS}

#
# Set filter used to exclude certain information from the link edit scanning.
# The value contains a comma separated list of patterns.
# example: A filter of *.SUB1, *.SUB2 will exclude modules SUB1 and SUB2
#          from any dataset. To exclude member HELLO in PDS TEST.eztrieve will
#          be matched by the pattern TEST.eztrieve.HELLO. The pattern TEST.eztrieve.*
#          will match any member in the data set TEST.eztrieve.
# The following filter excludes CICS and LE Library references.
dbb.LinkEditScanner.excludeFilter = ${SDFHLOAD}.*, ${SCEELKED}.*

#
# additional libraries for compile SYSLIB concatenation, comma-separated, see definitions in application-conf
# eztrieve_compileSyslibConcatenation=

#
# additional libraries for linkEdit SYSLIB concatenation, comma-separated, see definitions in application-conf
# eztrieve_linkEditSyslibConcatenation=

# eztrieve_dependenciesAlternativeLibraryNameMapping - an *optional* JSON String of a map defining the target dataset definition for alternate include libraries
#  this property is used to 
#   * copy files the to mapped dataset definition (PLEASE NOTE! This setting takes precendence over eztrieve_dependenciesDatasetMapping)
#   * defining additional allocations in the compile step
#
#  note that the SYSLIB is defaulted to the dataset definition 'eztrieve_cpyPDS' and is not required to be set here
#  sample: eztrieve_dependenciesAlternativeLibraryNameMapping = {"MYFILE": "eztrieve_myfilePDS", "DCLGEN" : "eztrieve_dclgenPDS"}
eztrieve_dependenciesAlternativeLibraryNameMapping=

# eztrieve_dependenciesDatasetMapping - an optional dbb property mapping to map dependencies to different target datasets
#  this property is used when dependencies are copied to the different build libraries, e.q dclgens going into to a dedicated library
#  note, that a dependency file needs to match a single rule
#
#  sample:
#   eztrieve_dependenciesDatasetMapping = eztrieve_cpyPDS :: **/copybook/*.cpy
#   eztrieve_dependenciesDatasetMapping = eztrieve_dclgenPDS :: **/dclgens/*.cpy
#
#  default copies all dependencies into the dependency dataset definition which was previously passed to the utilities/BuildUitilities.copySourceFiles method
#   eztrieve_dependenciesDatasetMapping = eztrieve_cpyPDS :: **/* 
eztrieve_dependenciesDatasetMapping = eztrieve_cpyPDS :: **/*
